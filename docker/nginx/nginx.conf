upstream backend {
    server backend_server:3000;
}

server {
	listen 80;
	listen [::]:80;
	server_name localhost https_server;
    
    server_tokens off;
    
    return 301 https://$host$request_uri;
}

server {
	server_name localhost https_server;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_tokens off;

    ssl_certificate /etc/nginx/certs/https_server.crt;
    ssl_certificate_key /etc/nginx/certs/https_server.key;
    
  	ssl_session_cache shared:SSL:10m;
  	ssl_session_timeout 10m;

    gzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on; 
    gzip_min_length 1024; 
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
        
  	ssl_protocols TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	add_header X-Frame-Options DENY always;
	add_header X-Content-Type-Options nosniff always;
	add_header X-Xss-Protection "1; mode=block" always;
    add_header X-Forwarded-Proto $scheme;

  	ssl_stapling on;
  	ssl_stapling_verify on;
  	ssl_trusted_certificate /etc/nginx/certs/https_server.crt;

    proxy_read_timeout 120;
    proxy_connect_timeout 120;
    proxy_send_timeout 120;

    client_max_body_size 50M;
    
    location / {
        proxy_ssl_server_name on;
        proxy_ssl_name $host;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://backend/;
    }

    location /robots.txt {
        alias /usr/share/nginx/robots;
    }
    
    location /static/ {
        root /etc/nginx/static;
        try_files $uri =404;
    }

}